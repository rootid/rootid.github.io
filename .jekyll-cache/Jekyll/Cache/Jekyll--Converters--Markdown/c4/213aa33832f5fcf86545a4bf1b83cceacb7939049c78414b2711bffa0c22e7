I"U
<h2 id="raid">RAID</h2>

<p><a href="http://www.eecs.berkeley.edu/Pubs/TechRpts/1987/CSD-87-391.pdf">A case study for Redundant Arrays of Inexpensive Disk (RAID)</a></p>

<ul>
  <li>Performance of any system depends on
    <ol>
      <li>CPU</li>
      <li>Memory</li>
      <li>I/O</li>
    </ol>
  </li>
  <li>CPU and Memory performance increases according the Mooreâ€™s law, however I/O on SLED(Single Large Expensive Drives) creates bottleneck.</li>
  <li>
    <p>To improve performance and increase reliability RAID is used</p>
  </li>
  <li>I/O system is evaluated based on the following attributes
    <h3 id="1performance">1.Performance</h3>
    <p>At abstract level 2 types of systems need to be considered to measure the performance
   1.TPS (Random access)
       Read,Write and modify (Search)
   2.SuperComputer applications (Sequential access)
       Read and write</p>
    <h3 id="2power-consumption">2.Power consumption</h3>
    <h3 id="3scalability">3.Scalability</h3>
    <h3 id="4cost">4.Cost</h3>
    <h3 id="5reliability">5.Reliability</h3>
    <ul>
      <li>Achieved by increasing the MTTF</li>
      <li>However,the curse of the scalability</li>
      <li>MTTF = MTTF of single disk/ # of disk</li>
      <li>Ultimately if we increase the # of disks MTTF reduces</li>
      <li>Idea : Use of MTTR</li>
      <li>look at the bigger picture</li>
      <li>reduction in the MTTR result into increase in the MTTF.</li>
      <li>MTTF = (MTTF / G+C) * 1/prob. of another failure</li>
      <li>prob. of another failure = MTTR / (MTTF / # of disks - 1)</li>
      <li>Next prob of failure = MTTR / (MTTF / # of remaining disks - 1)</li>
    </ul>
  </li>
</ul>

<h3 id="raid-types">RAID types</h3>
<h4 id="types-of-disks-used">Types of disks used</h4>
<ul>
  <li>Data disk  =  G</li>
  <li>Check disk/parity disk  =  C</li>
  <li>RAID0 (JBOD  =  Just Bunch of Disk) C = 0</li>
  <li>RAID1  =  Mirrored Disk (G=C= 1)
Double the storage cost/Use only 50% of the storage space</li>
  <li>RAID2  =  Hamming code for error correction
Error correction requires more disk than error detection
A parity disk can detect the single error</li>
  <li>RAID3  =  Single check disk/Parity disk per group</li>
  <li>RAID4  =  Independent reads and writes</li>
  <li>RAID5  =  Spread data * parity over all disks (no single check disk)</li>
</ul>

<p><a href="https://raid.wiki.kernel.org/index.php/RAID_setup#Linear_mode">RAID can be implemented as an application using logical sectors and disk</a></p>

<h4 id="terms-and-notations">Terms and Notations</h4>
<ul>
  <li>MTTF = Mean Time To Fail</li>
  <li>MTTR = Mean Time To Repair</li>
</ul>
:ET